title Diagrama para la simulación monoobjetivo

actor User
participant MainWindowController
participant ProblemMenuConfiguration
participant DynamicConfigurationController
participant SingleObjectiveRunningWindowController
participant AlgorithmTask
participant ResultPlotWindowController
participant ResultWindowController
participant Algorithm
participant Problem
 
autonumber on
autoactivation on 


User->ProblemMenuConfiguration://Elegir problema\ndesde un menu y \ndisparar evento\npara abrir la red//\nmenuItemEventHander()

ProblemMenuConfiguration->*DynamicConfigurationController:<<crear>>

deactivate DynamicConfigurationController

ProblemMenuConfiguration->DynamicConfigurationController://Solicita al controlador que\n muestra la ventana//\nshowDinamicWindow()
deactivate ProblemMenuConfiguration
User<--DynamicConfigurationController:Ventana de configuración\nde algoritmo


User->DynamicConfigurationController:Ingresa las configuraciones\ny disparar evento para crear\nla instancia de la clase registrable\nonRunButtonClick()

DynamicConfigurationController->DynamicConfigurationController:Crear instancia \nde Registrable
MainWindowController<-DynamicConfigurationController://Ejecuta el callback//\nrunSingleObjectiveExperiment(Registrable)
deactivate DynamicConfigurationController
deactivateafter DynamicConfigurationController
destroyafter DynamicConfigurationController

autoactivation off
MainWindowController->MainWindowController://Construye el algoritmo//\nRegistrable.build()
autoactivation on
MainWindowController->*SingleObjectiveRunningWindowController:<<crear>>
SingleObjectiveRunningWindowController->*AlgorithmTask: <<crear>
deactivate AlgorithmTask
SingleObjectiveRunningWindowController->*ResultPlotWindowController:<<crear>>
deactivate ResultPlotWindowController
SingleObjectiveRunningWindowController->ResultPlotWindowController: getNode()
SingleObjectiveRunningWindowController<--ResultPlotWindowController:Regresa el componente grafico
deactivateafter SingleObjectiveRunningWindowController


MainWindowController->SingleObjectiveRunningWindowController://Muestra la ventana de \nejecución y ejecuta \nel algoritmo//\nshowWindowAndRunAlgorithm()
deactivate MainWindowController
autoactivation off
note over AlgorithmTask:Se ejecuta en otro\nhilo
User<--SingleObjectiveRunningWindowController: Muestra la ventana de feedback
autoactivation on
SingleObjectiveRunningWindowController->AlgorithmTask://Iniciar la ejecución un nuevo hilo//\nrun()
deactivate SingleObjectiveRunningWindowController

loop Hasta que se alcance la condición de termino (isStoppingConditionReached())
opt Opcional: Cancelar tarea o cerrar ventana
User->SingleObjectiveRunningWindowController://Solicita la cancelación de la tarea//\nonCancelButtonClick()\n          o\n//Solicita cerrar la ventada//\nonCloseButtonClick()
autoactivation off
SingleObjectiveRunningWindowController->AlgorithmTask://Cancela la tarea si\nesta en ejecucion//\ncancel()
deactivate SingleObjectiveRunningWindowController
destroy AlgorithmTask
end

autoactivation on
AlgorithmTask->Algorithm://Ejecutar un paso//\nrunSingleStep()
deactivateafter Algorithm
AlgorithmTask->Algorithm: Obtener estado de la ejecución
AlgorithmTask<--Algorithm:Devuelve el progreso del algoritmo\ny los resultados parciales
SingleObjectiveRunningWindowController<-AlgorithmTask:Notifica cambio del progreso de ejecución
SingleObjectiveRunningWindowController->ResultPlotWindowController: Agrega el resultado parcial al grafico
deactivateafter ResultPlotWindowController
User<--SingleObjectiveRunningWindowController: Muestra el cambio el progreso al usuario
opt Opcional: Mostrar grafico de resultados
User->SingleObjectiveRunningWindowController://Mostrar grafico//\n//Cambia la pestaña//
SingleObjectiveRunningWindowController->ResultPlotWindowController://Abre la ventada de graficos//\n
deactivateafter ResultPlotWindowController
deactivate SingleObjectiveRunningWindowController
end 
end
SingleObjectiveRunningWindowController<--AlgorithmTask: Devuelve los resultados finales
activate SingleObjectiveRunningWindowController
SingleObjectiveRunningWindowController->*ResultWindowController: <<crear>>
deactivate ResultWindowController
MainWindowController<-SingleObjectiveRunningWindowController://Ejecuta un callback//\ncreateResultTab(ResultWindowController)
deactivate SingleObjectiveRunningWindowController
note over MainWindowController:Añade un nuevo pestaña a la ventana\nprincipal para mostrar los resultados\ny vincula propiedades (binding).
User<--MainWindowController://Muestra la nueva pestaña//

alt Guardar table completa:
User->MainWindowController://Pulsa el boton\n para guardar la tabla//
note over MainWindowController:Llama al evento para guardar \nsobre el controlador de la \npestaña activa
MainWindowController->ResultPlotWindowController: //Solicita guardar la tabla de resultados completa//\nonSaveButtonClick()
deactivate MainWindowController
ResultPlotWindowController->ResultPlotWindowController:Guarda en dispositivo.
deactivateafter ResultPlotWindowController
space 
deactivate ResultPlotWindowController
else Guardar como inp
User->MainWindowController://Pulsa el boton\n para guardar la tabla//
note over MainWindowController:Llama al evento para guardar \nsobre el controlador de la \npestaña activa
MainWindowController->ResultPlotWindowController://Solicita guardar los resultados seleccionados como un archivo inp//\nonSaveAsINPButtonClick()
deactivate MainWindowController
ResultPlotWindowController->Problem: //Aplica las soluciones seleccionadas \na una copia del objeto network abierto//\napplySolutionToNetwork(Network.copy(), solución)
ResultPlotWindowController<--Problem: El objeto network con la solución aplicada
ResultPlotWindowController->ResultPlotWindowController:Guarda en dispositivo.
deactivateafter ResultPlotWindowController
space
deactivate ResultPlotWindowController
end

autoactivation off
autonumber off